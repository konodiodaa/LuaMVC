-- Tencent is pleased to support the open source community by making xLua available.
-- Copyright (C) 2016 THL A29 Limited, a Tencent company. All rights reserved.
-- Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
-- http://opensource.org/licenses/MIT
-- Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.


local grid = {}
local emptyGrid = {}
count = 1
row = 4
col = 4


function GenerateRandomBlocks()
	if #emptyGrid <= 0 then
		print("Game Failed!")
		return
	end

	local amount = 1

	for i = 1, amount, 1 do
		local rand = math.random(1,#emptyGrid)
		local index = emptyGrid[rand]

		grid[index] = 2
		table.remove(emptyGrid,rand)

		CS.PlayerModel.Instance:AddLev(grid)
	end
end


function UpdateGrid()
	if(CS.UnityEngine.Input.GetKeyDown(CS.UnityEngine.KeyCode.LeftArrow)) then
	-- elseif (CS.UnityEngine.Input.GetKeyDown(CS.UnityEngine.KeyCode.RightArrow)) then
	-- 	ShiftRight()
	-- 	CheckStreak()
	-- elseif (CS.UnityEngine.Input.GetKeyDown(CS.UnityEngine.KeyCode.UpArrow)) then
	-- 	ShiftUp()
	-- 	CheckStreak()
	-- elseif (CS.UnityEngine.Input.GetKeyDown(CS.UnityEngine.KeyCode.DownArrow)) then
	-- 	ShiftDown()
	-- 	CheckStreak()

		CS.PlayerModel.Instance:AddLev(grid)
		GenerateRandomBlocks()
		--CS.PlayerModel.Instance.AddLev()
		-- print(table.concat(grid,", "))
	end

	--GameState = 0
end


function moveBlock()

end

for i = 1, row *col, 1 do
	grid[i] = 0
	table.insert(emptyGrid,i)
end